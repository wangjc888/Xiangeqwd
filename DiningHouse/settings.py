"""
Django settings for DiningHouse project.

Generated by 'django-admin startproject' using Django 1.8.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from os.path import dirname, join

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

SESSION_COOKIE_AGE = 60*60*24*30
SESSION_SAVE_EVERY_REQUEST = True

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'utrh@e-*ggc(q0+-7q$c7eye)&*p12e8a6h(f@!l$mf3g)4j#k'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
# TEMPLATE_DEBUG = True
import socket
if socket.gethostname() == 'jiajia.9xi.com':
    DEBUG = TEMPLATE_DEBUG = False
else:
    DEBUG = TEMPLATE_DEBUG = True

ALLOWED_HOSTS = ['xiangeqwd.9xi.com']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'DiningMealManage',
    'DiningServer',
    'DiningOAM',
    'wechat_sdk.context.framework.django',
    # 'djcelery',
    # 'kombu.transport.django',
    'django_crontab',
)

CRONJOBS = (
    ('*/5 * * * *', 'DiningMealManage.cron.my_scheduled_job','>> /path/to/django/OAMCrontab.log 2>&1'),
    ('0 7 * * *', 'DiningOAM.cron.my_scheduled_job','>> /path/to/django/OAMCrontab.log 2>&1'),
)


# import djcelery
# from datetime import timedelta
# from celery.schedules import crontab
# djcelery.setup_loader()
# BROKER_URL = 'amqp://guest:guest@localhost:5672//'
# CELERY_IMPORTS = ('DiningOAM.tasks', )
# CELERY_TIMEZONE = 'Asia/Shanghai'
# CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'
# CELERYBEAT_SCHEDULE = {
#     'regain-meal-status': {
#         'task': 'DiningOAM.tasks.regainMealStatus',
#         #'schedule': timedelta(seconds=30),
#         'schedule' : crontab(hour=4, minute=0)#设置凌晨4点恢复估清

#     },
#     'test-task': {
#         'task': 'DiningOAM.tasks.add',
#         'schedule': timedelta(seconds=10),#10s执行一次测试任务
#         'args':(3, 7)
#     },
# }


MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'DiningHouse.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'DiningHouse.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'db_xiangeqwd',
        'USER': 'name_xiangeqwd',
        'PASSWORD': 'xiangeqwdpw',
        'HOST': '120.25.151.183',
        'PORT': '3306',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'db_dining',
#         'USER': 'dining',
#         'PASSWORD': 'diningpw',
#         'HOST': '101.200.84.75',
#         'PORT': '3306',
#     }
# }
    
# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/path/to/DiningHouse/static'
MEDIA_ROOT = '/path/to/DiningHouse/media'

MEDIA_URL = 'http://xiangeqwd.9xi.com/'

TEMPLATE_DIRS = (
    os.path.join(BASE_DIR,  'templates').replace('\\','/'),
)

#测试账号
# WC_PAY_APPID = 'wxda03d1e2f273b074'
# WC_PAY_APPSECRET = 'd4624c36b6795d1d99dcf0547af5443d'

#正式账号
WC_PAY_APPID = 'wxacfdb1da76aa7763'
WC_PAY_APPSECRET = '0f0f71dbff7dbde3e3b07897ddd8f78b'

WC_PAY_MCHID = '1270766901'
WC_PAY_KEY = 'akd2230dkdkiDKJkjkjdkfjskfjkslfj'
WC_ID = 'Raymond_jc'

WX_PAY_CA_FILE = "/path/to/DiningHouse/DiningServer/ssl/rootca.pem"
WX_PAY_KEY_FILE = "/path/to/DiningHouse/DiningServer/ssl/apiclient_key.pem"
WX_PAY_CERT_FILE = "/path/to/DiningHouse/DiningServer/ssl/apiclient_cert.pem"


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s',
        },
        'simple': {
            'format': '%(levelname)s %(message)s',
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'filters': ['require_debug_true'],
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter': 'simple',
            'filename': '/path/to/django/debug.log',
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
        'django': {
            'handlers': ['console', 'mail_admins', 'file'],
            'level': 'INFO',
            'filters': ['require_debug_true']
        }
    }
}
